<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:mvc="http://www.springframework.org/schema/mvc"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:context="http://www.springframework.org/schema/context"
             xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
             http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

    <mvc:annotation-driven />

    <context:component-scan base-package="org.springframework.social.showcase" />

    <http pattern="/resources/**" security="none" />
    <http use-expressions="true">
        <!-- Authentication policy -->
        <form-login login-page="/signin" default-target-url='/' authentication-failure-url="/signin?param.error=bad_credentials" />
        <logout logout-url="/signout" delete-cookies="JSESSIONID" />
        <intercept-url pattern="/favicon.ico" access="permitAll" />
        <intercept-url pattern="/resources/**" access="permitAll" />
        <intercept-url pattern="/auth/**" access="permitAll" />
        <intercept-url pattern="/signin/**" access="permitAll" />
        <intercept-url pattern="/signup/**" access="permitAll" />
        <intercept-url pattern="/dbconsole/**" access="permitAll" />
        <intercept-url pattern="/mvc/**" access="permitAll" />
        <intercept-url pattern="/demo/**" access="permitAll" />
        <intercept-url pattern="/disconnect/facebook" access="permitAll" />
        <intercept-url pattern="/**" access="isAuthenticated()"  />
        <remember-me user-service-ref="userDetailsService" />

        <!--  Spring Social Security authentication filter -->
        <custom-filter ref="socialAuthenticationFilter" before="PRE_AUTH_FILTER" />
    </http>



    <!--<authentication-manager alias="authenticationManager">-->
        <!--<authentication-provider user-service-ref="userDetailsService">-->
            <!--<password-encoder ref="passwordEncoder" />-->
        <!--</authentication-provider>-->

        <!--&lt;!&ndash; Spring Social Security authentication provider &ndash;&gt;-->
        <!--<authentication-provider ref="socialAuthenticationProvider" />-->
    <!--</authentication-manager>-->
    <!--<jdbc-user-service id="userDetailsService"-->
                       <!--data-source-ref="dataSource"-->
                       <!--users-by-username-query="select username, password, true from Account where username = ?"-->
                       <!--authorities-by-username-query="select username, 'ROLE_USER' from Account where username = ?"/>-->





    <beans:bean id="daoAuthenticationProvider"
                class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <beans:property name="userDetailsService" ref="userDetailsService"/>
    </beans:bean>


    <beans:bean id="authenticationManager"
                class="org.springframework.security.authentication.ProviderManager">
        <beans:property name="providers">
            <beans:list>
                <beans:ref local="daoAuthenticationProvider"/>
                <beans:ref local="socialAuthenticationProvider"/>
            </beans:list>
        </beans:property>
    </beans:bean>

    <authentication-manager>
        <authentication-provider user-service-ref="userDetailsService">
            <password-encoder hash="plaintext"/>
        </authentication-provider>
        <!-- Spring Social Security authentication provider -->
        <authentication-provider ref="socialAuthenticationProvider" />
    </authentication-manager>

    <beans:bean id="userDetailsService" class="com.example.security.VisitInfoUserDetailsService"/>



    <beans:bean id="textEncryptor" class="org.springframework.security.crypto.encrypt.Encryptors"
                factory-method="noOpText" />

    <beans:bean id="passwordEncoder" class="org.springframework.security.crypto.password.NoOpPasswordEncoder"
                factory-method="getInstance" />

    <beans:import resource="data.xml"/>
    <beans:import resource="social-security.xml"/>
    <beans:import resource="social.xml"/>

</beans:beans>